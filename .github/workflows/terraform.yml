name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      tfvars_file:
        description: 'Path to the .tfvars file'
        required: true
        default: 'variables.tfvars'
      action:
        type: choice
        description: 'Apply or Destroy'
        options:
        - plan
        - apply
        - destroy
        required: true
        default: 'plan'

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  CheckOut-Repo:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List directory contents
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la

  Setup-Terraform:
    runs-on: ubuntu-latest
    needs: CheckOut-Repo
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

  Terraform-Init:
    runs-on: ubuntu-latest
    needs: Setup-Terraform
    steps:
      - name: Terraform Init
        working-directory: EC2-TF
        run: terraform init

  Terraform-Format-Validate:
    runs-on: ubuntu-latest
    needs: Terraform-Init
    steps:
      - name: Terraform Format
        working-directory: EC2-TF
        run: terraform fmt

      - name: Terraform Validate
        working-directory: EC2-TF
        run: terraform validate

  Terraform-Action:
    runs-on: ubuntu-latest
    needs: Terraform-Format-Validate
    steps:
      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: EC2-TF
        run: terraform plan -var-file=${{ github.event.inputs.tfvars_file }} -input=false

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: EC2-TF
        run: terraform apply -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: EC2-TF
        run: terraform destroy -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false
